parameters:
    env(REDIS_URI): ''
    env(MERCURE_PUBLISH_URL): ''
    env(MERCURE_JWT_SECRET): ''
    env(ROUTER_CONTEXT_HOST): localhost:9501
    env(ROUTER_CONTEXT_SCHEME): http
    env(ROUTER_CONTEXT_BASE_URL): ''
    router.request_context.host: '%env(ROUTER_CONTEXT_HOST)%'
    router.request_context.scheme: '%env(ROUTER_CONTEXT_SCHEME)%'
    router.request_context.base_url: '%env(ROUTER_CONTEXT_BASE_URL)%'
    git.cloner.path: '%kernel.project_dir%/var/git-clones'

services:
    _defaults:
        autowire: true
        autoconfigure: true
        bind:
            string $gitClonerPath: '%git.cloner.path%'
            Symfony\Component\Messenger\MessageBusInterface $commandBus: '@messenger.bus.commands'
            Symfony\Component\Messenger\MessageBusInterface $eventBus: '@messenger.bus.events'
            Symfony\Component\Messenger\MessageBusInterface $queryBus: '@messenger.bus.queries'

    App\:
        resource: '../src/*'
        exclude:
            - '../src/{DependencyInjection,Domain,Migrations,Tests,Documentation,Kernel.php}'
            - '../src/Infrastructure/Documentation'

    App\Application\Query\Handler\:
        resource: '../src/Application/Query/Handler'
        tags: [{ name: messenger.message_handler, bus: messenger.bus.queries }]

    App\Application\Command\Handler\:
        resource: '../src/Application/Command/Handler'
        tags: [{ name: messenger.message_handler, bus: messenger.bus.commands }]

    App\Application\EventHandler\:
        resource: '../src/Application/EventHandler'
        tags: [{ name: messenger.message_handler, bus: messenger.bus.events }]

    App\Application\Action\:
        resource: '../src/Application/Action'
        tags: [controller.service_arguments]

    App\Domain\User\UserRepositoryInterface:
        class: App\Infrastructure\ORM\Repository\UserRepository

    App\Domain\Review\ReviewRepositoryInterface:
        class: App\Infrastructure\ORM\Repository\ReviewRepository

    App\Application\Contract\EventPublisherInterface:
        class: App\Infrastructure\Mercure\EventPublisher

    App\Application\Contract\UrlGeneratorInterface:
        class: App\Infrastructure\UrlGenerator\RequestContextUrlGenerator

    App\Application\Contract\GitRepositoryManagerInterface:
        class: App\Infrastructure\Git\CliGitRepositoryManager

    App\Domain\User\UserEventNormalizerInterface:
        class: App\Infrastructure\Serializer\UserEventNormalizer

    App\Domain\Review\ReviewEventNormalizerInterface:
        class: App\Infrastructure\Serializer\ReviewEventNormalizer

    App\Application\Contract\QueryBusInterface:
        class: App\Infrastructure\Messenger\QueryBus

    'App\Infrastructure\Documentation\SwaggerDocumentation':
        decorates: 'api_platform.swagger.normalizer.api_gateway'
        arguments:
            $decorated: '@App\Infrastructure\Documentation\SwaggerDocumentation.inner'

    App\Infrastructure\ApiPlatform\ReferencingIriConverter:
        decorates: 'api_platform.iri_converter'
        arguments:
            $resourceMetadataFactory: '@api_platform.metadata.resource.metadata_factory'
            $decorated: '@App\Infrastructure\ApiPlatform\ReferencingIriConverter.inner'

    app.redis.session_handler:
        class: Symfony\Component\HttpFoundation\Session\Storage\Handler\RedisSessionHandler
        arguments:
            - '@app.redis.client'

    App\Infrastructure\Predis\RedisConnectionChecker:
        arguments:
            $client: '@app.redis.client'

    app.redis.client:
        class: Predis\Client
        arguments:
            - '%env(REDIS_URI)%'
