security:
    encoders:
        App\Domain\User\User:
            algorithm: argon2i
        App\Application\Document\UserDocument:
            algorithm: argon2i

    providers:
        app_user_provider:
            entity:
                class: App\Domain\User\User
                property: email
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        docs:
            pattern:   ^/api/(graphql|docs)
            stateless: true
            anonymous: true
            guard:
                authenticators:
                    - lexik_jwt_authentication.jwt_token_authenticator

        login:
            pattern:  ^/api/token
            stateless: true
            anonymous: true
            json_login:
                check_path: api_login_check
                username_path: email
                password_path: password
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure

        api:
            pattern:   ^/api
            stateless: true
            guard:
                authenticators:
                    - lexik_jwt_authentication.jwt_token_authenticator

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/api/token, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api/docs,  roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api/graphql,  roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api,       roles: IS_AUTHENTICATED_FULLY }
