App\Domain\Review\Review:
  shortName: Review
  attributes:
    normalization_context:
      groups: ['ReviewRead']
    denormalization_context:
      groups: ['ReviewWrite']
  collectionOperations:
    get:
      method: GET
      access_control: "is_granted('ROLE_ADMIN')"
  itemOperations:
    get:
      method: GET
      access_control: "is_granted('ROLE_ADMIN') or (user and object.isGranted(user))"

App\Domain\Review\ReviewEventStore:
  shortName: ReviewEvent
  attributes:
    normalization_context:
      groups: ['ReviewEventRead']
    denormalization_context:
      groups: ['ReviewEventWrite']
  collectionOperations:
    get:
      method: GET
      access_control: "is_granted('ROLE_ADMIN')"
  itemOperations:
    get:
      method: GET
      access_control: "is_granted('ROLE_ADMIN') or (user and object.isGranted(user))"

App\Application\Document\ReviewDocument:
  shortName: Review
  attributes:
    iri: api_reviews_get_item
    normalization_context:
      groups: ['ReviewRead']
    denormalization_context:
      groups: ['ReviewWrite']
  collectionOperations:
    post:
      method: POST
      controller: App\Application\Action\CreateReviewAction
      access_control: "is_granted('ROLE_USER')"
  itemOperations: []
