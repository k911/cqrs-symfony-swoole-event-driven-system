App\Domain\User\User:
  shortName: User
  attributes:
    normalization_context:
      groups: ['UserRead']
    denormalization_context:
      groups: ['UserWrite']
  collectionOperations:
    get:
      method: GET
      access_control: "is_granted('ROLE_ADMIN')"
  itemOperations:
    get:
      method: GET
      access_control: "is_granted('ROLE_ADMIN') or (user and object.isGranted(user))"

App\Domain\User\UserEventStore:
  shortName: UserEvent
  attributes:
    normalization_context:
      groups: ['UserEventRead']
    denormalization_context:
      groups: ['UserEventWrite']
  collectionOperations:
    get:
      method: GET
      access_control: "is_granted('ROLE_ADMIN')"
  itemOperations:
    get:
      method: GET
      access_control: "is_granted('ROLE_ADMIN') or (user and object.isGranted(user))"

App\Application\Document\UserDocument:
  shortName: User
  attributes:
    iri: api_users_get_item
    normalization_context:
      groups: ['UserRead']
    denormalization_context:
      groups: ['UserWrite']
  collectionOperations:
    post:
      method: POST
      controller: App\Application\Action\CreateUserAction
      access_control: "is_granted('ROLE_ADMIN')"
  itemOperations: []

App\Application\Document\UserChangeEmailDocument:
  shortName: User
  attributes:
    iri: api_users_get_item
    normalization_context:
      groups: ['UserChangeEmailRead']
    denormalization_context:
      groups: ['UserChangeEmailWrite']
  collectionOperations: []
  itemOperations:
    change_email:
      method: POST
      path: '/users/{id}/change-email'
      controller: App\Application\Action\ChangeUserEmailAction
      access_control: "is_granted('ROLE_ADMIN') or (user and object.isGranted(user))"

App\Application\Document\UserChangePasswordDocument:
  shortName: User
  attributes:
    iri: api_users_get_item
    normalization_context:
      groups: ['UserChangePasswordRead']
    denormalization_context:
      groups: ['UserChangePasswordWrite']
  collectionOperations: []
  itemOperations:
    change_password:
      method: POST
      path: '/users/{id}/change-password'
      controller: App\Application\Action\ChangeUserPasswordAction
      access_control: "is_granted('ROLE_ADMIN') or (user and object.isGranted(user))"
